apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helm-chart.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "helm-chart.name" . }}
    helm.sh/chart: {{ include "helm-chart.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "helm-chart.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "helm-chart.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        acme/fingerprint: {{ .Values.deploymentFingerprint | quote }}
    spec:
      containers:
        - name: app
          image: "registry.gitlab.com/stefanotorresi/k8s-cd-demo:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 9000
          env:
            - name: DB_HOST
              value: {{ include "postgresql.fullname" . | quote }}
            - name: DB_PORT
              value: {{ .Values.postgresql.service.port | quote }}
            - name: DB_NAME
              value: {{ .Values.postgresql.postgresqlDatabase | quote }}
            - name: DB_USER
              value: {{ .Values.postgresql.postgresqlUsername | quote }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "postgresql.fullname" . }}
                  key: postgresql-password
          livenessProbe:
            tcpSocket:
              port: 9000
          readinessProbe:
            exec:
              command: [ 'php-fpm-healthcheck' ]
            initialDelaySeconds: 5
        - name: {{ .Chart.Name }}-reverse-proxy
          image: "registry.gitlab.com/stefanotorresi/k8s-cd-demo/fcgi-proxy:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
      initContainers:
        - name: init-db
          image: "registry.gitlab.com/stefanotorresi/k8s-cd-demo:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: [ 'sh', '-c', 'wait-for $DB_HOST:$DB_PORT -t 60 -- init_db.php ']

