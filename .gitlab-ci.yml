stages:
  - build
  - test
  - deploy

variables:
  DOCKER_HOST: tcp://docker:2375
  APP_IMAGE: $CI_REGISTRY_IMAGE
  APP_DEV_IMAGE: ${CI_REGISTRY_IMAGE}/dev
  APP_BASE_IMAGE: ${CI_REGISTRY_IMAGE}/base
  REVERSE_PROXY_IMAGE: ${CI_REGISTRY_IMAGE}/fcgi-proxy


### BUILD

build:
  stage: build
  image: docker:18.09
  services:
    - docker:18.09-dind
  before_script:
    - docker info
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - apk add --no-cache parallel
  script:
    - "parallel docker pull ::: \
        ${APP_BASE_IMAGE}:${CI_COMMIT_REF_SLUG} \
        ${APP_DEV_IMAGE}:${CI_COMMIT_REF_SLUG} \
        ${APP_IMAGE}:${CI_COMMIT_REF_SLUG} \
        ${REVERSE_PROXY_IMAGE}:${CI_COMMIT_REF_SLUG} \
       || true"
    - docker build . -t $APP_BASE_IMAGE:$CI_COMMIT_REF_SLUG --target base
        --cache-from $APP_BASE_IMAGE:$CI_COMMIT_REF_SLUG
    - docker build . -t $APP_DEV_IMAGE:$CI_COMMIT_REF_SLUG --target dev
        --cache-from $APP_BASE_IMAGE:$CI_COMMIT_REF_SLUG
        --cache-from $APP_DEV_IMAGE:$CI_COMMIT_REF_SLUG
    - docker build . -t $APP_IMAGE:$CI_COMMIT_REF_SLUG
        --cache-from $APP_BASE_IMAGE:$CI_COMMIT_REF_SLUG
        --cache-from $APP_DEV_IMAGE:$CI_COMMIT_REF_SLUG
        --cache-from $APP_IMAGE:$CI_COMMIT_REF_SLUG
    - docker build infra/nginx -t $REVERSE_PROXY_IMAGE:$CI_COMMIT_REF_SLUG
    - "parallel docker push ::: \
        ${APP_IMAGE}:${CI_COMMIT_REF_SLUG} \
        ${APP_DEV_IMAGE}:${CI_COMMIT_REF_SLUG} \
        ${APP_BASE_IMAGE}:${CI_COMMIT_REF_SLUG} \
        ${REVERSE_PROXY_IMAGE}:${CI_COMMIT_REF_SLUG} \
      "

### TEST

test:
  stage: test
  image:
    name: docker/compose:1.24.0
    entrypoint: [""]
  services:
    - docker:18.09-dind
  before_script:
    - cp infra/docker-compose.ci.override.yml docker-compose.override.yml
    - cp .env.example .env

    # we need to resort to yaml processing, because, well... yaml.
    - apk add --no-cache curl
    - curl -sSL https://github.com/mikefarah/yq/releases/download/2.2.1/yq_linux_amd64 -o /usr/local/bin/yq
      && chmod +x /usr/local/bin/yq
    - yq d -i docker-compose.yml services.app.volumes

    - docker info
    - docker-compose config
  script:
    - docker-compose pull
    - docker-compose up -d || (docker-compose ps && docker-compose logs app && exit 1)
    - docker-compose exec -T app sh -c 'wait-for $DB_HOST:$DB_PORT -t 60 -- phpunit'


### DEPLOY

.template: &deploy
  stage: deploy
  image: hypnoglow/kubernetes-helm
  before_script:
    - apk add --no-cache curl
    - curl -sL https://github.com/digitalocean/doctl/releases/download/v1.17.0/doctl-1.17.0-linux-amd64.tar.gz | tar -xzv
    - ./doctl -t $DO_TOKEN kube cluster demo config save
    - kubectl version
    - helm version


deploy preview:
  <<: *deploy
  script:
    - cd infra/helm-chart
    - helm dependency build
    - helm upgrade --install demo-$CI_ENVIRONMENT_SLUG
      --set-string image.tag=$CI_COMMIT_REF_SLUG
      --set ingress.enabled=true
      --set ingress.host=${CI_COMMIT_REF_SLUG}.k8s-cd-demo.torresi.io
  only:
    - branches
  environment:
    name: preview/${CI_COMMIT_REF_SLUG}
    url: http://${CI_COMMIT_REF_SLUG}.k8s-cd-demo.torresi.io
    on_stop: remove preview


remove preview:
  <<: *deploy
  variables:
    GIT_STRATEGY: none
  script:
    - helm del --purge demo-$CI_ENVIRONMENT_SLUG
  environment:
    name: preview/${CI_COMMIT_REF_SLUG}
    action: stop


deploy production:
  <<: *deploy
  script:
    - cd infra/helm-chart
    - helm dependency build
    - helm upgrade --install demo-$CI_ENVIRONMENT_SLUG
      --set-string image.tag=$CI_COMMIT_REF_SLUG
      --set ingress.enabled=true
      --set ingress.host=k8s-cd-demo.torresi.io
  only:
    - master
  environment:
    name: production
    url: http://k8s-cd-demo.torresi.io
  when: manual
